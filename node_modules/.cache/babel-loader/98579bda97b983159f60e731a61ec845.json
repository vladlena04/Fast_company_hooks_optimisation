{"ast":null,"code":"var _jsxFileName = \"/Users/vladlenabonk/Documents/GitHub/Fast_company_hooks_optimisation/src/app/components/examples/useMemo/complexCalculate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction factorial(n) {\n  return n ? n * factorial(n - 1) : 1;\n}\n\nfunction runFactorial(n) {\n  console.log(\"run Factorial\");\n  return factorial(n);\n}\n\nconst ComplexCalculateExample = () => {\n  _s();\n\n  const [value, setValue] = useState(100);\n  const [otherState, setOtherState] = useState(false);\n  const buttonColor = otherState ? \"primary\" : \"secondary\";\n  useEffect(() => {\n    console.log(\"render button color\");\n  }, [buttonColor]);\n  const fact = useMemo(() => runFactorial(value), [value]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SmallTitle, {\n        children: \"\\u041A\\u044D\\u0448\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0441\\u043B\\u043E\\u0436\\u043D\\u044B\\u0445 \\u0432\\u044B\\u0447\\u0438\\u0441\\u043B\\u0435\\u043D\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Value :\", value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result fact :\", fact]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: () => setValue(prevState => prevState + 10),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: () => setValue(prevState => prevState - 10),\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SmallTitle, {\n        children: \"\\u0417\\u0430\\u0432\\u0438\\u0441\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C \\u043E\\u0442 \\u0441\\u0442\\u043E\\u0440\\u043E\\u043D\\u043D\\u0438\\u0445 setState\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn ms-md-2  btn-\" + buttonColor,\n        onClick: () => setOtherState(prevState => !prevState),\n        children: [\" \", \"Change color\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ComplexCalculateExample, \"Mmw8Muqmro2Riaey9o9HcnQKUk4=\");\n\n_c = ComplexCalculateExample;\nexport default ComplexCalculateExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComplexCalculateExample\");","map":{"version":3,"sources":["/Users/vladlenabonk/Documents/GitHub/Fast_company_hooks_optimisation/src/app/components/examples/useMemo/complexCalculate.jsx"],"names":["React","useEffect","useState","useMemo","CardWrapper","SmallTitle","factorial","n","runFactorial","console","log","ComplexCalculateExample","value","setValue","otherState","setOtherState","buttonColor","fact","prevState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;;;AAEA,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,SAAOA,CAAC,GAAGA,CAAC,GAAGD,SAAS,CAACC,CAAC,GAAG,CAAL,CAAhB,GAA0B,CAAlC;AACD;;AACD,SAASC,YAAT,CAAsBD,CAAtB,EAAyB;AACvBE,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,SAAOJ,SAAS,CAACC,CAAD,CAAhB;AACD;;AAED,MAAMI,uBAAuB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMc,WAAW,GAAGF,UAAU,GAAG,SAAH,GAAe,WAA7C;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GAFQ,EAEN,CAACM,WAAD,CAFM,CAAT;AAIA,QAAMC,IAAI,GAAGd,OAAO,CAAC,MAAMK,YAAY,CAACI,KAAD,CAAnB,EAA4B,CAACA,KAAD,CAA5B,CAApB;AACA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,8BAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,oCAAiBK,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,OAAO,EAAE,MAAMJ,QAAQ,CAAEK,SAAD,IAAeA,SAAS,GAAG,EAA5B,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAUE;AACE,QAAA,SAAS,EAAC,sBADZ;AAEE,QAAA,OAAO,EAAE,MAAML,QAAQ,CAAEK,SAAD,IAAeA,SAAS,GAAG,EAA5B,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAE,sBAAsBF,WADnC;AAEE,QAAA,OAAO,EAAE,MAAMD,aAAa,CAAEG,SAAD,IAAe,CAACA,SAAjB,CAF9B;AAAA,mBAIG,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AA+BD,CAzCD;;GAAMP,uB;;KAAAA,uB;AA2CN,eAAeA,uBAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\n\nfunction factorial(n) {\n  return n ? n * factorial(n - 1) : 1;\n}\nfunction runFactorial(n) {\n  console.log(\"run Factorial\");\n  return factorial(n);\n}\n\nconst ComplexCalculateExample = () => {\n  const [value, setValue] = useState(100);\n  const [otherState, setOtherState] = useState(false);\n\n  const buttonColor = otherState ? \"primary\" : \"secondary\";\n  useEffect(() => {\n    console.log(\"render button color\");\n  }, [buttonColor]);\n\n  const fact = useMemo(() => runFactorial(value), [value]);\n  return (\n    <>\n      <CardWrapper>\n        <SmallTitle>Кэширование сложных вычислений</SmallTitle>\n        <p>Value :{value}</p>\n        <p>Result fact :{fact}</p>\n        <button\n          className=\"btn btn-primary mx-2\"\n          onClick={() => setValue((prevState) => prevState + 10)}\n        >\n          Increment\n        </button>\n        <button\n          className=\"btn btn-primary mx-2\"\n          onClick={() => setValue((prevState) => prevState - 10)}\n        >\n          Decrement\n        </button>\n      </CardWrapper>\n      <CardWrapper>\n        <SmallTitle>Зависимость от сторонних setState</SmallTitle>\n        <button\n          className={\"btn ms-md-2  btn-\" + buttonColor}\n          onClick={() => setOtherState((prevState) => !prevState)}\n        >\n          {\" \"}\n          Change color\n        </button>\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default ComplexCalculateExample;\n"]},"metadata":{},"sourceType":"module"}
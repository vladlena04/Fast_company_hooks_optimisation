{"ast":null,"code":"var _jsxFileName = \"/Users/vladlenabonk/Documents/GitHub/Fast_company_hooks_optimisation/src/app/components/common/blockQuote.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlockQuoteWrapper = ({\n  children\n}) => {\n  const clonedChildren = React.Children.map(children, child => {\n    let config = {};\n\n    if (child.type === \"p\") {\n      config = { ...child.props,\n        className: \"mt-3\"\n      };\n    }\n\n    if (child.type === \"figcaption\") {\n      config = { ...child.props,\n        className: \"blockquote-footer\"\n      };\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, config);\n  });\n  return /*#__PURE__*/_jsxDEV(\"figure\", {\n    children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n      children: [clonedChildren, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BlockQuoteWrapper;\nBlockQuoteWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport default BlockQuoteWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockQuoteWrapper\");","map":{"version":3,"sources":["/Users/vladlenabonk/Documents/GitHub/Fast_company_hooks_optimisation/src/app/components/common/blockQuote.jsx"],"names":["React","PropTypes","BlockQuoteWrapper","children","clonedChildren","Children","map","child","config","type","props","className","cloneElement","propTypes","oneOfType","arrayOf","node"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AACA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACxC,QAAMC,cAAc,GAAGJ,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA8BI,KAAD,IAAW;AAC3D,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAID,KAAK,CAACE,IAAN,KAAe,GAAnB,EAAwB;AACpBD,MAAAA,MAAM,GAAG,EAAE,GAAGD,KAAK,CAACG,KAAX;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAAT;AACH;;AACD,QAAIJ,KAAK,CAACE,IAAN,KAAe,YAAnB,EAAiC;AAC7BD,MAAAA,MAAM,GAAG,EAAE,GAAGD,KAAK,CAACG,KAAX;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAAT;AACH;;AACD,wBAAOX,KAAK,CAACY,YAAN,CAAmBL,KAAnB,EAA0BC,MAA1B,CAAP;AACH,GATsB,CAAvB;AAUA,sBACI;AAAA,2BACI;AAAA,iBAAaJ,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBD;;KAAMF,iB;AAiBNA,iBAAiB,CAACW,SAAlB,GAA8B;AAC1BV,EAAAA,QAAQ,EAAEF,SAAS,CAACa,SAAV,CAAoB,CAC1Bb,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,IAA5B,CAD0B,EAE1Bf,SAAS,CAACe,IAFgB,CAApB;AADgB,CAA9B;AAMA,eAAed,iBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BlockQuoteWrapper = ({ children }) => {\n    const clonedChildren = React.Children.map(children, (child) => {\n        let config = {};\n        if (child.type === \"p\") {\n            config = { ...child.props, className: \"mt-3\" };\n        }\n        if (child.type === \"figcaption\") {\n            config = { ...child.props, className: \"blockquote-footer\" };\n        }\n        return React.cloneElement(child, config);\n    });\n    return (\n        <figure>\n            <blockquote>{clonedChildren} </blockquote>\n        </figure>\n    );\n};\nBlockQuoteWrapper.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\nexport default BlockQuoteWrapper;\n"]},"metadata":{},"sourceType":"module"}
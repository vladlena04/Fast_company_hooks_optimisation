{"ast":null,"code":"var _jsxFileName = \"/Users/vladlenabonk/Documents/GitHub/Fast_company_hooks_optimisation/src/app/components/page/editUserPage/editUserPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUserPage = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\"\n  });\n  const [professions, setProfession] = useState([]);\n  const [qualities, setQualities] = useState({});\n  const [errors, setErrors] = useState({});\n\n  const getProfessionById = id => {\n    for (const prof in professions) {\n      const profData = professions[prof];\n      if (profData._id === id) return profData;\n    }\n  };\n\n  const getQualities = elements => {\n    const qualitiesArray = [];\n\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem.value === qualities[quality]._id) {\n          qualitiesArray.push(qualities[quality]);\n        }\n      }\n    }\n\n    return qualitiesArray;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const {\n      profession,\n      qualities\n    } = data;\n    api.users.update(userId, { ...data,\n      profession: getProfessionById(profession),\n      qualities: getQualities(qualities)\n    }).then(data => history.push(`/users/${data._id}`));\n    console.log(data);\n  };\n\n  const transformData = data => {\n    return data.map(qual => ({\n      label: qual.name,\n      value: qual._id\n    }));\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.users.getById(userId).then(({\n      profession,\n      qualities,\n      ...data\n    }) => setData(prevState => ({ ...prevState,\n      ...data,\n      qualities: transformData(qualities),\n      profession: profession._id\n    })));\n    api.qualities.fetchAll().then(data => setQualities(data));\n    api.professions.fetchAll().then(data => setProfession(data));\n  }, []);\n  useEffect(() => {\n    if (data._id) setIsLoading(false);\n  }, [data]);\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\"\n      }\n    }\n  };\n  useEffect(() => validate(), [data]);\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 shadow p-4\",\n        children: !isLoading && Object.keys(professions).length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0418\\u043C\\u044F\",\n            name: \"name\",\n            value: data.name,\n            onChange: handleChange,\n            error: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n            name: \"email\",\n            value: data.email,\n            onChange: handleChange,\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n            defaultOption: \"Choose...\",\n            options: professions,\n            name: \"profession\",\n            onChange: handleChange,\n            value: data.profession,\n            error: errors.profession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isValid,\n            className: \"btn btn-primary w-100 mx-auto\",\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EditUserPage, \"DOrhXWLUMKiNnB7u8GHkPFJDolM=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditUserPage;\nexport default EditUserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"sources":["/Users/vladlenabonk/Documents/GitHub/Fast_company_hooks_optimisation/src/app/components/page/editUserPage/editUserPage.jsx"],"names":["React","useEffect","useState","useHistory","useParams","validator","api","TextField","SelectField","EditUserPage","userId","history","isLoading","setIsLoading","data","setData","name","email","profession","professions","setProfession","qualities","setQualities","errors","setErrors","getProfessionById","id","prof","profData","_id","getQualities","elements","qualitiesArray","elem","quality","value","push","handleSubmit","e","preventDefault","isValid","validate","users","update","then","console","log","transformData","map","qual","label","getById","prevState","fetchAll","validatorConfig","isRequired","message","isEmail","handleChange","target","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\n\nconst EditUserPage = () => {\n    const { userId } = useParams();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState({\n        name: \"\",\n        email: \"\",\n        profession: \"\"\n    });\n    const [professions, setProfession] = useState([]);\n    const [qualities, setQualities] = useState({});\n    const [errors, setErrors] = useState({});\n    const getProfessionById = (id) => {\n        for (const prof in professions) {\n            const profData = professions[prof];\n            if (profData._id === id) return profData;\n        }\n    };\n    const getQualities = (elements) => {\n        const qualitiesArray = [];\n        for (const elem of elements) {\n            for (const quality in qualities) {\n                if (elem.value === qualities[quality]._id) {\n                    qualitiesArray.push(qualities[quality]);\n                }\n            }\n        }\n        return qualitiesArray;\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n        api.users\n          .update(userId, {\n              ...data,\n              profession: getProfessionById(profession),\n              qualities: getQualities(qualities)\n          })\n          .then((data) => history.push(`/users/${data._id}`));\n        console.log(data);\n    };\n    const transformData = (data) => {\n        return data.map((qual) => ({ label: qual.name, value: qual._id }));\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        api.users.getById(userId).then(({ profession, qualities, ...data }) =>\n          setData((prevState) => ({\n              ...prevState,\n              ...data,\n              qualities: transformData(qualities),\n              profession: profession._id\n          }))\n        );\n        api.qualities.fetchAll().then((data) => setQualities(data));\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n    useEffect(() => {\n        if (data._id) setIsLoading(false);\n    }, [data]);\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => validate(), [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n      <div className=\"container mt-5\">\n          <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                  {!isLoading && Object.keys(professions).length > 0 ? (\n                    <form onSubmit={handleSubmit}>\n                        <TextField\n                          label=\"Имя\"\n                          name=\"name\"\n                          value={data.name}\n                          onChange={handleChange}\n                          error={errors.name}\n                        />\n                        <TextField\n                          label=\"Электронная почта\"\n                          name=\"email\"\n                          value={data.email}\n                          onChange={handleChange}\n                          error={errors.email}\n                        />\n                        <SelectField\n                          label=\"Выбери свою профессию\"\n                          defaultOption=\"Choose...\"\n                          options={professions}\n                          name=\"profession\"\n                          onChange={handleChange}\n                          value={data.profession}\n                          error={errors.profession}\n                        />\n                        <button\n                          type=\"submit\"\n                          disabled={!isValid}\n                          className=\"btn btn-primary w-100 mx-auto\"\n                        >\n                            Обновить\n                        </button>\n                    </form>\n                  ) : (\n                    \"Loading...\"\n                  )}\n              </div>\n          </div>\n      </div>\n    );\n};\n\nexport default EditUserPage;\n"]},"metadata":{},"sourceType":"module"}
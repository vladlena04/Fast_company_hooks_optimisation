{"ast":null,"code":"var _jsxFileName = \"/Users/vladlenabonk/Documents/GitHub/Fast_company_hooks_optimisation/src/app/components/common/form/textField.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextField = ({\n  label,\n  type,\n  name,\n  value,\n  onChange,\n  error\n}) => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChange = ({\n    target\n  }) => {\n    onChange({\n      name: target.name,\n      value: target.value\n    });\n  };\n\n  const getInputClasses = () => {\n    return \"form-control\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: [\" \", label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group has-validation\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPassword ? \"text\" : type,\n        id: name,\n        name: name,\n        value: value,\n        onChange: handleChange,\n        className: getInputClasses()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), type === \"password\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-secondary\",\n        type: \"button\",\n        onClick: toggleShowPassword,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback \",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TextField, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n\n_c = TextField;\nTextField.defaultProps = {\n  type: \"text\"\n};\nTextField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string\n};\nexport default TextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"sources":["/Users/vladlenabonk/Documents/GitHub/Fast_company_hooks_optimisation/src/app/components/common/form/textField.jsx"],"names":["React","useState","PropTypes","TextField","label","type","name","value","onChange","error","showPassword","setShowPassword","handleChange","target","getInputClasses","toggleShowPassword","prevState","defaultProps","propTypes","string","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA,QAA5B;AAAsCC,EAAAA;AAAtC,CAAD,KAAmD;AAAA;;AACjE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMW,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACjCL,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAEO,MAAM,CAACP,IAAf;AAAqBC,MAAAA,KAAK,EAAEM,MAAM,CAACN;AAAnC,KAAD,CAAR;AACH,GAFD;;AAGA,QAAMO,eAAe,GAAG,MAAM;AAC1B,WAAO,kBAAkBL,KAAK,GAAG,aAAH,GAAmB,EAA1C,CAAP;AACH,GAFD;;AAGA,QAAMM,kBAAkB,GAAG,MAAM;AAC7BJ,IAAAA,eAAe,CAAEK,SAAD,IAAe,CAACA,SAAjB,CAAf;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEV,IAAhB;AAAA,sBAAwBF,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACI;AACI,QAAA,IAAI,EAAEM,YAAY,GAAG,MAAH,GAAYL,IADlC;AAEI,QAAA,EAAE,EAAEC,IAFR;AAGI,QAAA,IAAI,EAAEA,IAHV;AAII,QAAA,KAAK,EAAEC,KAJX;AAKI,QAAA,QAAQ,EAAEK,YALd;AAMI,QAAA,SAAS,EAAEE,eAAe;AAN9B;AAAA;AAAA;AAAA;AAAA,cADJ,EAUKT,IAAI,KAAK,UAAT,iBACG;AACI,QAAA,SAAS,EAAC,2BADd;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,OAAO,EAAEU,kBAHb;AAAA,+BAKI;AACI,UAAA,SAAS,EACL,eAAeL,YAAY,GAAG,QAAH,GAAc,EAAzC;AAFR;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAXR,EAuBKD,KAAK,iBAAI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,cAvBd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CA1CD;;GAAMN,S;;KAAAA,S;AA2CNA,SAAS,CAACc,YAAV,GAAyB;AACrBZ,EAAAA,IAAI,EAAE;AADe,CAAzB;AAGAF,SAAS,CAACe,SAAV,GAAsB;AAClBd,EAAAA,KAAK,EAAEF,SAAS,CAACiB,MADC;AAElBd,EAAAA,IAAI,EAAEH,SAAS,CAACiB,MAFE;AAGlBb,EAAAA,IAAI,EAAEJ,SAAS,CAACiB,MAHE;AAIlBZ,EAAAA,KAAK,EAAEL,SAAS,CAACiB,MAJC;AAKlBX,EAAAA,QAAQ,EAAEN,SAAS,CAACkB,IALF;AAMlBX,EAAAA,KAAK,EAAEP,SAAS,CAACiB;AANC,CAAtB;AASA,eAAehB,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n"]},"metadata":{},"sourceType":"module"}
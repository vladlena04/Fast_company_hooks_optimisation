{"ast":null,"code":"const comments = [{\n  _id: \"67rdca3eeb7f6fg\",\n  userId: \"67rdca3eeb7f6fgeed471815\",\n  pageId: \"67rdca3eeb7f6fgeed471815\",\n  content: \"Lorem ipsum dolor\",\n  created_at: \"1633576399367\"\n}, {\n  _id: \"67rdca3eeb7f6fgdasd\",\n  pageId: \"67rdca3eeb7f6fgeed471815\",\n  userId: \"67rdca3eeb7f6fgeed471815\",\n  content: \"Lorem ipsum dolor and etc\",\n  created_at: \"1633573058520\"\n}, {\n  _id: \"67rdca3eeb7f6fgdaasd\",\n  pageId: \"67rdca3eeb7f6fgeed471817\",\n  userId: \"67rdca3eeb7f6fgeed471815\",\n  content: \"Lorem ipsum dolor and etc\",\n  created_at: \"1633573058520\"\n}];\n\nif (!localStorage.getItem(\"comments\")) {\n  localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\n\nconst fetchAll = () => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(comments);\n  }, 200);\n});\n\nconst fetchCommentsForUser = userId => new Promise(resolve => {\n  window.setTimeout(function () {\n    resolve(JSON.parse(localStorage.getItem(\"comments\")).filter(c => c.pageId === userId));\n  }, 200);\n});\n\nconst add = data => new Promise(resolve => {\n  window.setTimeout(function () {\n    const comments = JSON.parse(localStorage.getItem(\"comments\"));\n    const newComment = { ...data,\n      created_at: Date.now(),\n      _id: Math.random().toString(36).substr(2, 9)\n    };\n    comments.push(newComment);\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n    resolve(newComment);\n  }, 200);\n});\n\nconst remove = id => new Promise(resolve => {\n  window.setTimeout(function () {\n    const comments = JSON.parse(localStorage.getItem(\"comments\"));\n    const newComments = comments.filter(x => x._id !== id);\n    console.log(id);\n    console.log(newComments);\n    localStorage.setItem(\"comments\", JSON.stringify(newComments));\n    resolve(id);\n  }, 200);\n});\n\nexport default {\n  fetchAll,\n  fetchCommentsForUser,\n  add,\n  remove\n};","map":{"version":3,"sources":["/Users/vladlenabonk/Documents/GitHub/Fast_company_hooks_optimisation/src/app/api/fake.api/comments.api.js"],"names":["comments","_id","userId","pageId","content","created_at","localStorage","getItem","setItem","JSON","stringify","fetchAll","Promise","resolve","window","setTimeout","fetchCommentsForUser","parse","filter","c","add","data","newComment","Date","now","Math","random","toString","substr","push","remove","id","newComments","x","console","log"],"mappings":"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","sourcesContent":["const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForUser = (userId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === userId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            console.log(id);\n            console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForUser,\n    add,\n    remove\n};\n"]},"metadata":{},"sourceType":"module"}